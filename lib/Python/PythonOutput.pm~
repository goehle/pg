=head1 NAME

PythonInterpreter - An object which will run and print python code.  

=head1 DESCRIPTION

This runs and prints python code.  

=head1 SYNOPSIS

=cut

use strict;
use AnswerHash;
use PGcore;

package Python::PythonOutput;
use base qw(Python::PythonInterpreter);

sub new {
  my $class = shift;
  my $code = shift // '';
  my $self = $class->SUPER::new($code);

  bless $self, $class;

  $self->evaluate();

  return $self;
}

sub ans_rule {shift; pgCall('ans_rule',@_)}

sub cmp {
  my $self = shift;
  my $ans = new AnswerEvaluator;

  $ans->ans_hash( 	
		 correct_ans       => $self->stdout,
		 type              => 'string_literal',
		 score             => 0,
		);
  
  # remove all pre filters
  $ans->install_pre_filter('reset');
  
  
  $ans->install_evaluator(&_answer_evaluator);
  
  # set up post filters to correctly format results in html
  $ans->install_pre_filter('reset');    
  $ans->install_post_filter(&_answer_filter);
  
  # remove all pre filters
  $ans->install_pre_filter('erase') if $self->{ans_name};
  
  return $ans;
}


sub _answer_evaluator {
  my $ans_hash = shift;
  $ans_hash->{_filter_name} = "Evaluator: Compare string answers with eq";
  $ans_hash->{original_student_ans} = $ans_hash->{original_student_ans} // '';
  
  $ans_hash->{original_student_ans} =~ s/\r//g;
  $ans_hash->{correct_ans} =~ s/\r//g;

  chomp($ans_hash->{original_student_ans});
  chomp($ans_hash->{correct_ans});
  
  $ans_hash->{score} = ($ans_hash->{original_student_ans} eq $ans_hash->{correct_ans})?1:0  ;

  return $ans_hash;
}

sub _answer_filter {
  my $ans_hash = shift; 
  $ans_hash->{_filter_name} = "clean up strings";
  my $string = $ans_hash->{student_ans};
  $string =~ s/\t/    /g;
  # tabs mess up the past answer database.  
  $ans_hash->{original_student_ans} =~ s/\t/    /g;
  $string = PGcore::encode_pg_and_html($string);
  $string =~ s/&#10;/<br>/g;
  $string =~ s/ /&nbsp;/;
  
  $ans_hash->{'preview_text_string'} = $string;
  $ans_hash->{'preview_latex_string'} = $string;
  $ans_hash->{'student_ans'} = $string;
  
  $string = $ans_hash->{'correct_ans'};
  $string = PGcore::encode_pg_and_html($string);
  $string =~ s/&#10;/<br>/g;
  $string =~ s/ /&nbsp;/;
  
  $ans_hash->{'correct_ans'} = $string;
  
  return $ans_hash;
}

1;
